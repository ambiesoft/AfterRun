//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ambiesoft.AfterRunLib.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ambiesoft.AfterRunLib.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Afterrun : Run executable after specified time
        ///
        ///ex: afterrun -t SecToWait -exe EXE [-arg ARG]
        ///
        ///-c : Position window at Center
        ///-m : Set window Topmost
        ///-p : Wait pid to finish
        ///-t : Seconds to wait, or &apos;m&apos; to wait forever. Specify &apos;5m&apos; for five minutes, &apos;2h&apos; for two hours, &apos;1:30:30&apos; for one hour and 30 minutes and 30 seconds or &apos;4:30&apos; for 4 minutes and 30 seconds
        ///-ws : Set &apos;normal&apos; for showing in normal window, &apos;minimized&apos; for minimized window or &apos;maximized&apos; for maximized window
        ///-exe EXE : Specify a e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpString {
            get {
                return ResourceManager.GetString("HelpString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated interval.
        /// </summary>
        internal static string IntervalAlreadySet {
            get {
                return ResourceManager.GetString("IntervalAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Interval.
        /// </summary>
        internal static string InvalidInterval {
            get {
                return ResourceManager.GetString("InvalidInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Process Id: {0}.
        /// </summary>
        internal static string InvalidProcessId {
            get {
                return ResourceManager.GetString("InvalidProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Window Style.
        /// </summary>
        internal static string InvalidWindowStyle {
            get {
                return ResourceManager.GetString("InvalidWindowStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following program will be executed..
        /// </summary>
        internal static string Launching {
            get {
                return ResourceManager.GetString("Launching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Inputs.
        /// </summary>
        internal static string MultipleInputs {
            get {
                return ResourceManager.GetString("MultipleInputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Interval Values.
        /// </summary>
        internal static string MultipleIntervals {
            get {
                return ResourceManager.GetString("MultipleIntervals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Arugment for interval value.
        /// </summary>
        internal static string NoArgumentForInterval {
            get {
                return ResourceManager.GetString("NoArgumentForInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Argument for process id.
        /// </summary>
        internal static string NoArgumentForProcessId {
            get {
                return ResourceManager.GetString("NoArgumentForProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Argument for Window Style.
        /// </summary>
        internal static string NoArgumentForWindowStyle {
            get {
                return ResourceManager.GetString("NoArgumentForWindowStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Arguments.
        /// </summary>
        internal static string NoArguments {
            get {
                return ResourceManager.GetString("NoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No arguments specifed for &apos;-arg&apos;.
        /// </summary>
        internal static string NoArgumentSpecified {
            get {
                return ResourceManager.GetString("NoArgumentSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No executables specified for &apos;-exe&apos;.
        /// </summary>
        internal static string NoExecutableSpecified {
            get {
                return ResourceManager.GetString("NoExecutableSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process of id {0} is not found.
        /// </summary>
        internal static string PIDNotFound {
            get {
                return ResourceManager.GetString("PIDNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System will shutdown....
        /// </summary>
        internal static string Shutdowning {
            get {
                return ResourceManager.GetString("Shutdowning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;-t&apos; and &apos;-p&apos; can not be specified at the same time..
        /// </summary>
        internal static string T_AND_P_CANNOTSPECIFIED_AT_THE_SAME_TIME {
            get {
                return ResourceManager.GetString("T_AND_P_CANNOTSPECIFIED_AT_THE_SAME_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;-t&apos; or &apos;-p&apos; must be specified..
        /// </summary>
        internal static string T_OR_P_MUST_BE_SPECIFIED {
            get {
                return ResourceManager.GetString("T_OR_P_MUST_BE_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Option.
        /// </summary>
        internal static string UnknownOption {
            get {
                return ResourceManager.GetString("UnknownOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Url-Encoding to pass the argument.
        /// </summary>
        internal static string UseUrlEncodeToPassArg {
            get {
                return ResourceManager.GetString("UseUrlEncodeToPassArg", resourceCulture);
            }
        }
    }
}
